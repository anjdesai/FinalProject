'''
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000.
'''

finalsum = 0
for x in range(1000):
    if (x%3 == 0 or x%5 == 0):
        finalsum = finalsum+x
print (finalsum)

'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

firstnumber = 1
secondnumber = 1
sum = 0
while secondnumber < 4000000:
    if secondnumber % 2 ==0:
        sum += secondnumber
    firstnumber,secondnumber = secondnumber,firstnumber+secondnumber
print(sum)

'''
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
'''

#This function will find the maximum prime factor.
def largestprimefactor(number):
    factor = 2
    while factor * factor <= number:
        while number % factor == 0:
            number /= factor
        factor += 1
    if (number > 1):
        return number
    return factor
#This will print the largest prime factor for the number 600851475143
#This can be changed to accomodate for any number 
print largestprimefactor(600851475143)
